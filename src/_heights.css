/* Variables */

:root {
  --height-1: 1rem;
  --height-2: 2rem;
  --height-3: 4rem;
  --height-4: 8rem;
  --height-5: 16rem;
}

/*

   HEIGHTS
   Docs: http://tachyons.io/docs/layout/heights/

   Base:
     h = height
     min-h = min-height
     min-vh = min-height vertical screen height
     vh = vertical screen height

   Modifiers
     1 = 1st step in height scale
     2 = 2nd step in height scale
     3 = 3rd step in height scale
     4 = 4th step in height scale
     5 = 5th step in height scale

     -50   = literal value 50%
     -75   = literal value 75%
     -100  = literal value 100%

     -auto = string value of auto
     -inherit = string value of inherit

   Media Query Extensions:
     -s = small
     -m = medium
     -l = large

*/

/* Height Scale */

.h1 { height: var(--height-1); }
.h2 { height: var(--height-2); }
.h3 { height: var(--height-3); }
.h4 { height: var(--height-4); }
.h5 { height: var(--height-5); }

/* Height Percentages - Based off of height of parent */

.h-50 {  height:  50%; }
.h-75 {  height:  75%; }
.h-100 { height: 100%; }

.min-h-100 { min-height: 100%; }

/* Screen Height Percentage */

.vh-25 {  height:  25vh; }
.vh-50 {  height:  50vh; }
.vh-75 {  height:  75vh; }
.vh-100 { height: 100vh; }

.min-vh-100 { min-height: 100vh; }

/* Dynamic Screen Height Percentage */

.dvh-100 { height: 100dvh; }

/* String Properties */

.h-auto {     height: auto; }
.h-inherit {  height: inherit; }

@media (--breakpoint-small) {
  .h1-s {  height: var(--height-1); }
  .h2-s {  height: var(--height-2); }
  .h3-s {  height: var(--height-3); }
  .h4-s {  height: var(--height-4); }
  .h5-s {  height: var(--height-5); }
  .h-50-s { height: 50%; }
  .h-75-s { height: 75%; }
  .h-100-s { height: 100%; }
  .min-h-100-s { min-height: 100%; }
  .vh-25-s {  height:  25vh; }
  .vh-50-s {  height:  50vh; }
  .vh-75-s {  height:  75vh; }
  .vh-100-s { height: 100vh; }
  .min-vh-100-s { min-height: 100vh; }
  .dvh-100-s { height: 100dvh; }
  .h-auto-s { height: auto; }
  .h-inherit-s { height: inherit; }
}

@media (--breakpoint-medium) {
  .h1-m { height: var(--height-1); }
  .h2-m { height: var(--height-2); }
  .h3-m { height: var(--height-3); }
  .h4-m { height: var(--height-4); }
  .h5-m { height: var(--height-5); }
  .h-50-m { height: 50%; }
  .h-75-m { height: 75%; }
  .h-100-m { height: 100%; }
  .min-h-100-m { min-height: 100%; }
  .vh-25-m {  height:  25vh; }
  .vh-50-m {  height:  50vh; }
  .vh-75-m {  height:  75vh; }
  .vh-100-m { height: 100vh; }
  .min-vh-100-m { min-height: 100vh; }
  .dvh-100-m { height: 100dvh; }
  .h-auto-m { height: auto; }
  .h-inherit-m { height: inherit; }
}

@media (--breakpoint-large) {
  .h1-l { height: var(--height-1); }
  .h2-l { height: var(--height-2); }
  .h3-l { height: var(--height-3); }
  .h4-l { height: var(--height-4); }
  .h5-l { height: var(--height-5); }
  .h-50-l { height: 50%; }
  .h-75-l { height: 75%; }
  .h-100-l { height: 100%; }
  .min-h-100-l { min-height: 100%; }
  .vh-25-l {  height:  25vh; }
  .vh-50-l {  height:  50vh; }
  .vh-75-l {  height:  75vh; }
  .vh-100-l { height: 100vh; }
  .min-vh-100-l { min-height: 100vh; }
  .dvh-100-l { height: 100dvh; }
  .h-auto-l { height: auto; }
  .h-inherit-l { height: inherit; }
}
